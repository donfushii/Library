--[[

Coding: utf-8
Copyright (C) 2024 github.com/donfushii

--]]


local ImperiumLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/donfushii/Library/main/Imperium"))()

local Windows = ImperiumLib:Window("Imperium", Color3.fromRGB(44, 120, 224), Enum.KeyCode.V)
ImperiumLib:Notification("Notification", "Welcome to Imperium. Thanks for using my HUB, Soon we will bring more.", "Okay!")

-- [ TABS ] --

local MainTAB = Windows:Tab("Main")
local GameTAB = Windows:Tab("Game")
local TargetTAB = Windows:Tab("Target")
local MiscTAB = Windows:Tab("Misc")
local CreditsTAB = Windows:Tab("Credits")


-- [ FUNCTION'S ] --

AntiFlingFunction = nil
AntiRagdollFunction = nil


-- [ VARIABLE'S ] --

local Players = game:GetService("Players")
local plr = Players.LocalPlayer
local player = Players.LocalPlayer
local humanoid = plr.Character.Humanoid

local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local Light = game:GetService("Lighting")
local HttpService = game:GetService("HttpService")
local httprequest = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request) or request

local mouse = plr:GetMouse()
local ScriptWhitelist = {}
local ForceWhitelist = {}
local CannonsFolders = {}

local TargetedPlayer = nil
local PotionTool = nil
local SavedCheckpoint = nil




-- [ FUNCTION'S #2 ] --

local function SendNotify(title, message, duration)
	game:GetService("StarterGui"):SetCore("SendNotification", {Title = title, Text = message, Duration = duration;})
end

--

_G.shield = function(id)
	if not table.find(ForceWhitelist,id) then
		table.insert(ForceWhitelist, id)
	end
end

--

local function GetPing()
	return (game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValue())/1000
end

--

local function GetPlayer(UserDisplay)
	if UserDisplay ~= "" then
        for i,v in pairs(Players:GetPlayers()) do
            if v.Name:lower():match(UserDisplay) or v.DisplayName:lower():match(UserDisplay) then
                return v
            end
        end
		return nil
	else
		return nil
    end
end

--

local function GetCharacter(Player)
	if Player.Character then
		return Player.Character
	end
end

--

local function GetRoot(Player)
	if GetCharacter(Player):FindFirstChild("HumanoidRootPart") then
		return GetCharacter(Player).HumanoidRootPart
	end
end

--

local function TeleportTO(posX,posY,posZ,player,method)
	pcall(function()
		if method == "safe" then
			task.spawn(function()
				for i = 1,30 do
					task.wait()
					GetRoot(plr).Velocity = Vector3.new(0,0,0)
					if player == "pos" then
						GetRoot(plr).CFrame = CFrame.new(posX,posY,posZ)
					else
						GetRoot(plr).CFrame = CFrame.new(GetRoot(player).Position)+Vector3.new(0,2,0)
					end
				end
			end)
		else
			GetRoot(plr).Velocity = Vector3.new(0,0,0)
			if player == "pos" then
				GetRoot(plr).CFrame = CFrame.new(posX,posY,posZ)
			else
				GetRoot(plr).CFrame = CFrame.new(GetRoot(player).Position)+Vector3.new(0,2,0)
			end
		end
	end)
end

--

local function PredictionTP(player,method)
	local root = GetRoot(player)
	local pos = root.Position
	local vel = root.Velocity
	GetRoot(plr).CFrame = CFrame.new((pos.X)+(vel.X)*(GetPing()*3.5),(pos.Y)+(vel.Y)*(GetPing()*2),(pos.Z)+(vel.Z)*(GetPing()*3.5))
	if method == "safe" then
		task.wait()
		GetRoot(plr).CFrame = CFrame.new(pos)
		task.wait()
		GetRoot(plr).CFrame = CFrame.new((pos.X)+(vel.X)*(GetPing()*3.5),(pos.Y)+(vel.Y)*(GetPing()*2),(pos.Z)+(vel.Z)*(GetPing()*3.5))
	end
end

--

local function Touch(x,root)
	pcall(function()
		x = x:FindFirstAncestorWhichIsA("Part")
		if x then
			if firetouchinterest then
				task.spawn(function()
					firetouchinterest(x, root, 1)
					task.wait()
					firetouchinterest(x, root, 0)
				end)
			end
		end
	end)
end

--

local function GetPush()
	local TempPush = nil
	pcall(function()
		if plr.Backpack:FindFirstChild("Push") then
			PushTool = plr.Backpack.Push
			PushTool.Parent = plr.Character
			TempPush = PushTool
		end
		for i,v in pairs(Players:GetPlayers()) do
			if v.Character:FindFirstChild("Push") then
				TempPush = v.Character.Push
			end
		end
	end)
	return TempPush
end

--

local function CheckPotion()
	if plr.Backpack:FindFirstChild("potion") then
		PotionTool = plr.Backpack:FindFirstChild("potion")
		return true
	elseif plr.Character:FindFirstChild("potion") then
		PotionTool = plr.Character:FindFirstChild("potion")
		return true
	else
		return false
	end
end

--

local function Push(Target)
	local Push = GetPush()
	local FixTool = nil
	if Push ~= nil then
		local args = {[1] = Target.Character}
		GetPush().PushTool:FireServer(unpack(args))
	end
	if plr.Character:FindFirstChild("Push") then
		plr.Character.Push.Parent = plr.Backpack
	end
	if plr.Character:FindFirstChild("ModdedPush") then
		FixTool = plr.Character:FindFirstChild("ModdedPush")
		FixTool.Parent = plr.Backpack
		FixTool.Parent = plr.Character
	end
	if plr.Character:FindFirstChild("ClickTarget") then
		FixTool = plr.Character:FindFirstChild("ClickTarget")
		FixTool.Parent = plr.Backpack
		FixTool.Parent = plr.Character
	end
	if plr.Character:FindFirstChild("potion") then
		FixTool = plr.Character:FindFirstChild("potion")
		FixTool.Parent = plr.Backpack
		FixTool.Parent = plr.Character
	end
end

--

local function ToggleRagdoll(bool)
	pcall(function()
		plr.Character["Falling down"].Disabled = bool
		plr.Character["Swimming"].Disabled = bool
		plr.Character["StartRagdoll"].Disabled = bool
		plr.Character["Pushed"].Disabled = bool
		plr.Character["RagdollMe"].Disabled = bool
	end)
end

--

local function ToggleVoidProtection(bool)
	if bool then
		game.Workspace.FallenPartsDestroyHeight = 0/0
	else
		game.Workspace.FallenPartsDestroyHeight = -500
	end
end

--

local function ToggleFling(bool)
	task.spawn(function()
		if bool then
			local RVelocity = nil
			repeat
				pcall(function()
					RVelocity = GetRoot(plr).Velocity 
					GetRoot(plr).Velocity = Vector3.new(math.random(-150,150),-25000,math.random(-150,150))
					RunService.RenderStepped:wait()
					GetRoot(plr).Velocity = RVelocity
				end)
				RunService.Heartbeat:wait()
			until TouchFling == print("ON")
		else
			TouchFling = print("OFF")
		end
	end)
end




-- [ TAB #1 ] --

MainTAB:Button("üìç „Éª Push All", function()
	local oldpos = GetRoot(plr).Position
	for i,v in pairs(Players:GetPlayers()) do
		pcall(function()
			if (v ~= plr) and (not table.find(ScriptWhitelist,v.UserId)) and (not table.find(ForceWhitelist,v.UserId)) then
				PredictionTP(v)
				task.wait(GetPing()+0.05)
				Push(v)
			end
		end)
	end
	TeleportTO(oldpos.X,oldpos.Y,oldpos.Z,"pos","safe")
end)

MainTAB:Button("üìç „Éª Modded Push", function()
	local ModdedPush = Instance.new("Tool")
	ModdedPush.Name = "Modded Push"
	ModdedPush.RequiresHandle = false
	ModdedPush.TextureId = "rbxassetid://14478599909"
	ModdedPush.ToolTip = "Modded push"

	local function ActivateTool()
		local root = GetRoot(plr)
		local hit = mouse.Target
		local person = nil
		if hit and hit.Parent then
			if hit.Parent:IsA("Model") then
				person = game.Players:GetPlayerFromCharacter(hit.Parent)
			elseif hit.Parent:IsA("Accessory") then
				person = game.Players:GetPlayerFromCharacter(hit.Parent.Parent)
			end
			if person then
				local pushpos = root.CFrame
				PredictionTP(person)
				task.wait(GetPing()+0.05)
				Push(person)
				root.CFrame = pushpos
			end
		end
	end

	ModdedPush.Activated:Connect(function()
		ActivateTool()
	end)
	ModdedPush.Parent = plr.Backpack
end)

MainTAB:Button("üìç „Éª Potion Dick", function()
	if CheckPotion() then
		PotionTool.Parent = plr.Character
		PotionTool.GripUp = Vector3.new(1,0,0)
		PotionTool.GripPos = Vector3.new(1.5, 0.5, -1.1)
		PotionTool.Parent = plr.Backpack
		PotionTool.Parent = plr.Character
    else
		PotionTool.Parent = plr.Character
		PotionTool.GripUp = Vector3.new(0, 0, 0)
		PotionTool.GripPos = Vector3.new(0, 0, 0)
		PotionTool.Parent = plr.Backpack
		PotionTool.Parent = plr.Character
	end
end)

---- [ ] ----

MainTAB:Toggle("üìå „Éª Anti Ragdoll", false, function(bool)

	AntiRagdollFunction = GetRoot(plr).ChildAdded:Connect(function(Force)
		if Force.Name == "PushForce" then
			Force.MaxForce = Vector3.new(0,0,0)
			Force.Velocity = Vector3.new(0,0,0)
		end
	end)

	ToggleRagdoll(bool)

end)

MainTAB:Toggle("üìå „Éª Anti Fling", false, function(bool)
	
	local AntiFling = bool

	if AntiFling == true then
	    _G.AntiFlingToggled = true
	    loadstring(game:HttpGet('https://raw.githubusercontent.com/blackheartedcurse/punkz-Scripts/main/Anti%20fling.lua'))()
	else
		_G.AntiFlingToggled = false
	end
end)

MainTAB:Toggle("üìå „Éª Touch Fling [WORKING BAD]", false, function(bool)

	local fixpos = GetRoot(plr).Position
	ToggleVoidProtection(true)
	ToggleFling(bool)
	TeleportTO(fixpos.X,fixpos.Y,fixpos.Z,"pos","safe")
	ToggleVoidProtection(false)

end)

MainTAB:Toggle("üìå „Éª Void Protection", false, function(bool)

	ToggleVoidProtection(bool)

end)




-- [ TAB #2 ] --

GameTAB:Button("üìç „Éª Minefield", function()
	TeleportTO(-65, 23, -151,"pos","safe")
end)

GameTAB:Button("üìç „Éª Balloon", function()
	TeleportTO(-118, 23, -126,"pos","safe")
end)

GameTAB:Button("üìç „Éª Normal Stairs", function()
	TeleportTO(-6, 203, -496,"pos","safe")
end)

GameTAB:Button("üìç „Éª Moving Stairs", function()
	TeleportTO(-210, 87, -224,"pos","safe")
end)

GameTAB:Button("üìç „Éª Spiral Stairs", function()
	TeleportTO(151, 847, -306,"pos","safe")
end)

GameTAB:Button("üìç „Éª Skyscraper", function()
	TeleportTO(142, 1033, -192,"pos","safe")
end)

GameTAB:Button("üìç „Éª Pool", function()
	TeleportTO(-133, 65, -321,"pos","safe")
end)

---- [ ] ----

GameTAB:Button("üìå „Éª Teleport Cannon #1", function()
	TeleportTO(-61, 34, -228,"pos","safe")
end)

GameTAB:Button("üìå „Éª Teleport Cannon #2", function()
	TeleportTO(50, 34, -228,"pos","safe")
end)

GameTAB:Button("üìå „Éª Teleport Cannon #3", function()
	TeleportTO(-6, 35, -106,"pos","safe")
end)




-- [ TAB #3 ] --

TargetTAB:Textbox("„Éª Set Target [NOT WORKING]", true, function(t)

end)

--[[
TargetTAB:Button("üìç „Éª Push", function()
	if TargetedPlayer ~= nil then
		local pushpos = GetRoot(plr).CFrame
		PredictionTP(Players[TargetedPlayer])
		task.wait(GetPing()+0.05)
		Push(Players[TargetedPlayer])
		GetRoot(plr).CFrame = pushpos
	end
end)

TargetTAB:Button("üìç „Éª Goto", function()
	if TargetedPlayer ~= nil then
		TeleportTO(0,0,0,Players[TargetedPlayer],"safe")
	end
end)

TargetTAB:Button("üìç „Éª Whitelist", function()
	if TargetedPlayer ~= nil then
		if table.find(ScriptWhitelist, Players[TargetedPlayer].UserId) then
			for i,v in pairs(ScriptWhitelist) do
				if v == Players[TargetedPlayer].UserId then
					table.remove(ScriptWhitelist, i)
				end
			end
			SendNotify("[NOTIFICATION]",TargetedPlayer.." Was removed from whitelist.",5)
		else
			table.insert(ScriptWhitelist, Players[TargetedPlayer].UserId)
			SendNotify("[NOTIFICATION]",TargetedPlayer.." Was added to whitelist.", 5)
		end
	end
end)

---- [ ] ----

TargetTAB:Toggle("üìå „Éª View", false, function(bool)
	if TargetedPlayer ~= nil then
		if ViewTarget == print("Viewing")  then
			repeat
				pcall(function()
					game.Workspace.CurrentCamera.CameraSubject = Players[TargetedPlayer].Character.Humanoid
				end)
				task.wait(0.5)
			until ViewTarget == print("UnViewing")  
			game.Workspace.CurrentCamera.CameraSubject = plr.Character.Humanoid
		end
	end
end)

TargetTAB:Toggle("üìå „Éª Focus", false, function(bool)
	if TargetedPlayer ~= nil then
		if FocusTarget == print("Focusing")  then
			repeat
				pcall(function()
					local target = Players[TargetedPlayer]
					TeleportTO(0,0,0,target)
					Push(Players[TargetedPlayer])
				end)
				task.wait(0.2)
			until FocusTarget == print("UnFocus") 
		end
	end
end)

TargetTAB:Toggle("üìå „Éª Backpack", false, function(bool)
	if TargetedPlayer ~= nil then
		if BackpackTarget == print("Backpack") then
			repeat
				pcall(function()
					if not GetRoot(plr):FindFirstChild("BreakVelocity") then
						pcall(function()
							local TempV = Velocity_Asset:Clone()
							TempV.Parent = GetRoot(plr)
						end)
					end
					local root = GetRoot(Players[TargetedPlayer])
					plr.Character.Humanoid.Sit = true
					GetRoot(plr).CFrame = root.CFrame * CFrame.new(0,0,1.2) * CFrame.Angles(0, -3, 0)
					GetRoot(plr).Velocity = Vector3.new(0,0,0)
				end)
				task.wait()
			until BackpackTarget == print("Unbackpack") 
			if GetRoot(plr):FindFirstChild("BreakVelocity") then
				GetRoot(plr).BreakVelocity:Destroy()
			end
		end
	end
end)

TargetTAB:Toggle("üìå „Éª Bang", false, function(bool)
	if TargetedPlayer ~= nil then
		if BenxTarget == print("Benx") then
			PlayAnim(5918726674,0,1)
			repeat
				pcall(function()
					if not GetRoot(plr):FindFirstChild("BreakVelocity") then
						pcall(function()
							local TempV = Velocity_Asset:Clone()
							TempV.Parent = GetRoot(plr)
						end)
					end
					local otherRoot = GetRoot(Players[TargetedPlayer])
					GetRoot(plr).CFrame = otherRoot.CFrame * CFrame.new(0,0,1.1)
					GetRoot(plr).Velocity = Vector3.new(0,0,0)
				end)
				task.wait()
			until BenxTarget == print("UnBenx") 
			StopAnim()
			if GetRoot(plr):FindFirstChild("BreakVelocity") then
				GetRoot(plr).BreakVelocity:Destroy()
			end
		end
	end
end)

TargetTAB:Toggle("üìå „Éª Headsit", false, function(bool)
	if TargetedPlayer ~= nil then
		if HeadsitTarget == print("Headsitting") then
			repeat
				pcall(function()
					if not GetRoot(plr):FindFirstChild("BreakVelocity") then
						pcall(function()
							local TempV = Velocity_Asset:Clone()
							TempV.Parent = GetRoot(plr)
						end)
					end
					local targethead = Players[TargetedPlayer].Character.Head
					plr.Character.Humanoid.Sit = true
					GetRoot(plr).CFrame = targethead.CFrame * CFrame.new(0,2,0)
					GetRoot(plr).Velocity = Vector3.new(0,0,0)
				end)
				task.wait()
			until HeadsitTarget == print("UnHeadsitting")
			if GetRoot(plr):FindFirstChild("BreakVelocity") then
				GetRoot(plr).BreakVelocity:Destroy()
			end
		end
	end
end)

TargetTAB:Toggle("üìå „Éª Drag", false, function(bool)
	if TargetedPlayer ~= nil then
		if DragTarget == print("Dragging") then
			PlayAnim(10714360343,0.5,0)
			repeat
				pcall(function()
					if not GetRoot(plr):FindFirstChild("BreakVelocity") then
						pcall(function()
							local TempV = Velocity_Asset:Clone()
							TempV.Parent = GetRoot(plr)
						end)
					end
					local root = Players[TargetedPlayer].Character.RightHand
					GetRoot(plr).CFrame = root.CFrame * CFrame.new(0,-2.5,1) * CFrame.Angles(-2, -3, 0)
					GetRoot(plr).Velocity = Vector3.new(0,0,0)
				end)
				task.wait()
			until DragTarget == print("UnDragging")
			StopAnim()
			if GetRoot(plr):FindFirstChild("BreakVelocity") then
				GetRoot(plr).BreakVelocity:Destroy()
			end
		end
	end
end)
--]]




-- [ TAB #4 ] --

MiscTAB:Slider("‚è∞ „Éª WalkSpeed", 16, 200, 16, function(value)
	game.Players.LocalPlayer.Character.Humanoid.JumpPower = (value)
end)

MiscTAB:Slider("‚è∞ „Éª JumpPower", 16, 450, 16, function(value)
	game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (value)
end)

---- [ ] ----

MiscTAB:Button("üìç „Éª Save Spawn", function()
	SavedCheckpoint = GetRoot(plr).Position
	SendNotify("[NOTIFICATION]", "Checkpoint saved successfully.", 5)
end)

MiscTAB:Button("üìç „Éª Clear Spawn", function()
	SavedCheckpoint = nil
	SendNotify("[NOTIFICATION]", "Checkpoint cleared successfully.", 5)
end)

MiscTAB:Button("üìç „Éª Respawn", function()
	local RsP = GetRoot(plr).Position
	plr.Character.Humanoid.Health = 0
	plr.CharacterAdded:wait(); task.wait(GetPing()+0.1)
	TeleportTO(RsP.X,RsP.Y,RsP.Z,"pos","safe")
end)




-- [ TAB #5 ] --

CreditsTAB:Label("„Éª Owner   :  @donfushii")
CreditsTAB:Label("„Éª Tester    :  @ImperiumClothes")

CreditsTAB:Button("üìç „Éª Copy Discord", function()
	setclipboard("discord.gg/UBcYG3sA")
end)

CreditsTAB:Colorpicker("üìç „Éª UI Color",Color3.fromRGB(44, 120, 224), function(t)
    ImperiumLib:ChangePresetColor(Color3.fromRGB(t.R * 255, t.G * 255, t.B * 255))
end)


-- [ ERROR'S | MORE FUNCTION'S ] --

Players.PlayerRemoving:Connect(function(player)
	pcall(function()
		if player.Name == TargetedPlayer then
			UpdateTarget(nil)
			SendNotify("[NOTIFICATION]", "Targeted player left/rejoined.", 5)
		end
	end)
end)




-- [ ADMIN ] --

--[[

local impadmin = {
	5127756688,
}
  
  local bending = false
  local kickmsg = 'PERMA-BANNED'
  local function commands(msg,plr)
	  if DisableMod == false or table.find(impadmin, plr) then
		  local Mod = game:GetService('Players'):GetPlayerByUserId(plr)
		  local Msg = string.lower(msg)
		  local SplitCMD = string.split(Msg,' ')
		  local Lower = string.lower(player.Name)
		  local Allowed = string.find(Lower, SplitCMD[2])

		  if Allowed then
			  if string.find(SplitCMD[1], 'c!freeze') then
				  player.Character.HumanoidRootPart.Anchored = true
			  end

			  if string.find(SplitCMD[1], 'c!unfreeze') then
				  player.Character.HumanoidRootPart.Anchored = false
			  end

			  if string.find(SplitCMD[1], 'c!kick') then
				  local ISADMIN = table.find(impadmin, player.UserId)
				  if not ISADMIN then
					  kickmsg = Mod.Name
					  player:Kick(kickmsg)
					  wait(5)
					  while true do end
				  end
			  end

			  if string.find(SplitCMD[1], 'c!bring') then
				  player.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.Players:FindFirstChild(Mod.Name).HumanoidRootPart.Position)
			  end

			  if string.find(SplitCMD[1], 'c!fling') then
				  player.Character.HumanoidRootPart.Velocity = Vector3.new(500000,500000,500000)
			  end

		  else

			  if string.find(msg, '/e test') then
				  game.ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer("yoooo!!", 'All');
			  end

		  end
	  end
  end

-- [ TAG'S ] --

loadstring(game:HttpGet('https://raw.githubusercontent.com/donfushii/Test/main/tagcheck.lua'))()

--]]
